{
  "address": "0x8Cdb3C59088998520c0775dFB3E1E1286eb24703",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPolygonSand",
          "name": "polygonSand",
          "type": "address"
        },
        {
          "internalType": "contract IPolygonSand",
          "name": "fakePolygonSand",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claimDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SandClaimed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimedSand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endOfClaimPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "extendClaimPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unclaimedSand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawUnclaimed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfe1281c39dcd8611089872fbf802a105af6d9b773f9f7c271a0346ed9e9adb97",
  "receipt": {
    "to": null,
    "from": "0x5F890c9522dCE5670d741D4277BFCC2d9cA8Af02",
    "contractAddress": "0x8Cdb3C59088998520c0775dFB3E1E1286eb24703",
    "transactionIndex": 1,
    "gasUsed": "660794",
    "logsBloom": "0x
    "blockHash": "0xcaac889d01bfcc7f8651c48e909697523f2709ef45d772b0c68e4c299c58b5b3",
    "transactionHash": "0xfe1281c39dcd8611089872fbf802a105af6d9b773f9f7c271a0346ed9e9adb97",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 20494514,
        "transactionHash": "0xfe1281c39dcd8611089872fbf802a105af6d9b773f9f7c271a0346ed9e9adb97",
        "address": "0x8Cdb3C59088998520c0775dFB3E1E1286eb24703",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xcaac889d01bfcc7f8651c48e909697523f2709ef45d772b0c68e4c299c58b5b3"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 20494514,
        "transactionHash": "0xfe1281c39dcd8611089872fbf802a105af6d9b773f9f7c271a0346ed9e9adb97",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000005f890c9522dce5670d741d4277bfcc2d9ca8af02",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000258fd17a3c4000000000000000000000000000000000000000000000000000220a0a8c1fb04000000000000000000000000000000000000000000000001acc5892dc7bb1e117c000000000000000000000000000000000000000000000000021e47abaa5740000000000000000000000000000000000000000000000001acc58b86c4d2c1d57c",
        "logIndex": 3,
        "blockHash": "0xcaac889d01bfcc7f8651c48e909697523f2709ef45d772b0c68e4c299c58b5b3"
      }
    ],
    "blockNumber": 20494514,
    "cumulativeGasUsed": "705450",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE03489D4E90b22c59c5e23d45DFd59Fc0dB8a025",
    "0xE03489D4E90b22c59c5e23d45DFd59Fc0dB8a025",
    "63113852"
  ],
  "solcInputHash": "e1f7df0c6c65da54d9478c8482a42bd3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPolygonSand\",\"name\":\"polygonSand\",\"type\":\"address\"},{\"internalType\":\"contract IPolygonSand\",\"name\":\"fakePolygonSand\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SandClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimedSand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endOfClaimPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"extendClaimPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimedSand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUnclaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(uint256)\":{\"params\":{\"amount\":\"the amount of tokens to be swapped\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256)\":{\"notice\":\"Swaps fake sand with the new polygonSand\"},\"claimedSand()\":{\"notice\":\"Getter for amount of fake Sand swapped\"},\"extendClaimPeriod(uint256)\":{\"notice\":\"Update end of claim period\"},\"unclaimedSand()\":{\"notice\":\"Getter for amount of sand which is still locked in this contract\"},\"withdrawUnclaimed()\":{\"notice\":\"We don't want minted sand to be locked here forever in case user does not claim it. So the owner can withdraw the remaining sand after a time period of two years.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/solc_0.8/polygon/child/sand/PolygonSandClaim.sol\":\"PolygonSandClaim\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-0.8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-0.8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"src/solc_0.8/polygon/child/sand/PolygonSandClaim.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\nimport \\\"@openzeppelin/contracts-0.8/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IPolygonSand.sol\\\";\\n\\ncontract PolygonSandClaim is Ownable {\\n    IPolygonSand internal immutable _polygonSand;\\n    IPolygonSand internal immutable _fakePolygonSand;\\n    uint256 public endOfClaimPeriod;\\n\\n    event SandClaimed(address indexed user, uint256 amount);\\n\\n    constructor(\\n        IPolygonSand polygonSand,\\n        IPolygonSand fakePolygonSand,\\n        uint256 claimDuration\\n    ) {\\n        _polygonSand = polygonSand;\\n        _fakePolygonSand = fakePolygonSand;\\n        endOfClaimPeriod = block.timestamp + claimDuration;\\n    }\\n\\n    /**\\n     * @notice Swaps fake sand with the new polygonSand\\n     * @param amount the amount of tokens to be swapped\\n     */\\n    function claim(uint256 amount) external {\\n        require(block.timestamp <= endOfClaimPeriod, \\\"Claim period is over\\\");\\n        require(unclaimedSand() > amount, \\\"Not enough sand for claim\\\");\\n        bool success = _fakePolygonSand.transferFrom(msg.sender, address(this), amount);\\n        if (success) {\\n            _polygonSand.transfer(msg.sender, amount);\\n            emit SandClaimed(msg.sender, amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice We don't want minted sand to be locked here forever in case user does not claim it.\\n               So the owner can withdraw the remaining sand after a time period of two years.\\n     */\\n    function withdrawUnclaimed() external onlyOwner {\\n        require(block.timestamp > endOfClaimPeriod, \\\"Claim Period is still going on\\\");\\n        _polygonSand.transfer(msg.sender, unclaimedSand());\\n    }\\n\\n    /**\\n     * @notice Update end of claim period\\n     */\\n    function extendClaimPeriod(uint256 timestamp) external onlyOwner {\\n        require(timestamp > 0, \\\"Extension time should be greater than 0\\\");\\n        endOfClaimPeriod += timestamp;\\n    }\\n\\n    // Getters\\n\\n    /**\\n     * @notice Getter for amount of sand which is still locked in this contract\\n     */\\n    function unclaimedSand() public returns (uint256) {\\n        return _polygonSand.balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @notice Getter for amount of fake Sand swapped\\n     */\\n    function claimedSand() external returns (uint256) {\\n        return _fakePolygonSand.balanceOf(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x2e1fb371ebb526c0e89b13e9801c57a57d791fbe8b3e0e6129ea7036ee54754e\",\"license\":\"MIT\"},\"src/solc_0.8/polygon/child/sand/interfaces/IPolygonSand.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.2;\\n\\ninterface IPolygonSand {\\n    /// @notice update the ChildChainManager Proxy address\\n    /// @param newChildChainManagerProxy address of the new childChainManagerProxy\\n    function updateChildChainManager(address newChildChainManagerProxy) external;\\n\\n    /// @notice called when tokens are deposited on root chain\\n    /// @param user user address for whom deposit is being done\\n    /// @param depositData abi encoded amount\\n    function deposit(address user, bytes calldata depositData) external;\\n\\n    /// @notice called when user wants to withdraw tokens back to root chain\\n    /// @dev Should burn user's tokens. This transaction will be verified when exiting on root chain\\n    /// @param amount amount to withdraw\\n    function withdraw(uint256 amount) external;\\n\\n    /// @notice Get the balance of `owner`.\\n    /// @param owner The address to query the balance of.\\n    /// @return The amount owned by `owner`.\\n    function balanceOf(address owner) external returns (uint256);\\n\\n    /// @notice transfer tokens to a specific address.\\n    /// @param to destination address receiving the tokens.\\n    /// @param amount number of tokens to transfer.\\n    /// @return success whether the transfer succeeded.\\n    function transfer(address to, uint256 amount) external returns (bool success);\\n\\n    /// @notice transfer tokens from one address to another.\\n    /// @param from address tokens will be sent from.\\n    /// @param to destination address receiving the tokens.\\n    /// @param amount number of tokens to transfer.\\n    /// @return success whether the transfer succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool success);\\n\\n    function setTrustedForwarder(address trustedForwarder) external;\\n}\\n\",\"keccak256\":\"0x43f6e0b5a3b9f90dc6ac8607605bdd743e8907150350cf8fb529f3740962f753\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610b7f380380610b7f83398101604081905261002f916100bc565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606084811b821660805283901b1660a05261009481426100f7565b6001555061011b915050565b80516001600160a01b03811681146100b757600080fd5b919050565b6000806000606084860312156100d0578283fd5b6100d9846100a0565b92506100e7602085016100a0565b9150604084015190509250925092565b6000821982111561011657634e487b7160e01b81526011600452602481fd5b500190565b60805160601c60a05160601c610a2461015b6000396000818161016b015261045c0152600081816102a70152818161051d01526106c90152610a246000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063759c6cd211610076578063d5defd3c1161005b578063d5defd3c1461010b578063e48914871461011e578063f2fde38b14610127576100a3565b8063759c6cd2146100e85780638da5cb5b146100f0576100a3565b806308181adc146100a857806333fc56d9146100c3578063379607f5146100cd578063715018a6146100e0575b600080fd5b6100b061013a565b6040519081526020015b60405180910390f35b6100cb6101f5565b005b6100cb6100db366004610981565b610376565b6100cb6105dc565b6100b0610698565b6000546040516001600160a01b0390911681526020016100ba565b6100cb610119366004610981565b610700565b6100b060015481565b6100cb610135366004610933565b6107ea565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a08231906024015b602060405180830381600087803b1580156101b857600080fd5b505af11580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f09190610999565b905090565b6000546001600160a01b031633146102545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60015442116102a55760405162461bcd60e51b815260206004820152601e60248201527f436c61696d20506572696f64206973207374696c6c20676f696e67206f6e0000604482015260640161024b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb336102dd610698565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610961565b50565b6001544211156103c85760405162461bcd60e51b815260206004820152601460248201527f436c61696d20706572696f64206973206f766572000000000000000000000000604482015260640161024b565b806103d1610698565b1161041e5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f7567682073616e6420666f7220636c61696d00000000000000604482015260640161024b565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190610961565b905080156105d8576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561056957600080fd5b505af115801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610961565b5060405182815233907f284dd43ee37b5c5d080af9db118c4e911fbdd88200fa4523b98330dcf2d024d09060200160405180910390a25b5050565b6000546001600160a01b031633146106365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240161019e565b6000546001600160a01b0316331461075a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024b565b600081116107d05760405162461bcd60e51b815260206004820152602760248201527f457874656e73696f6e2074696d652073686f756c64206265206772656174657260448201527f207468616e203000000000000000000000000000000000000000000000000000606482015260840161024b565b80600160008282546107e291906109b1565b909155505050565b6000546001600160a01b031633146108445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024b565b6001600160a01b0381166108c05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161024b565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600060208284031215610944578081fd5b81356001600160a01b038116811461095a578182fd5b9392505050565b600060208284031215610972578081fd5b8151801515811461095a578182fd5b600060208284031215610992578081fd5b5035919050565b6000602082840312156109aa578081fd5b5051919050565b600082198211156109e9577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea26469706673582212201c1a2573ae393d58dd0c607460af2a9561a812081f811b33f30770b08889bbeb64736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c8063759c6cd211610076578063d5defd3c1161005b578063d5defd3c1461010b578063e48914871461011e578063f2fde38b14610127576100a3565b8063759c6cd2146100e85780638da5cb5b146100f0576100a3565b806308181adc146100a857806333fc56d9146100c3578063379607f5146100cd578063715018a6146100e0575b600080fd5b6100b061013a565b6040519081526020015b60405180910390f35b6100cb6101f5565b005b6100cb6100db366004610981565b610376565b6100cb6105dc565b6100b0610698565b6000546040516001600160a01b0390911681526020016100ba565b6100cb610119366004610981565b610700565b6100b060015481565b6100cb610135366004610933565b6107ea565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a08231906024015b602060405180830381600087803b1580156101b857600080fd5b505af11580156101cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f09190610999565b905090565b6000546001600160a01b031633146102545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60015442116102a55760405162461bcd60e51b815260206004820152601e60248201527f436c61696d20506572696f64206973207374696c6c20676f696e67206f6e0000604482015260640161024b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb336102dd610698565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561033b57600080fd5b505af115801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610961565b50565b6001544211156103c85760405162461bcd60e51b815260206004820152601460248201527f436c61696d20706572696f64206973206f766572000000000000000000000000604482015260640161024b565b806103d1610698565b1161041e5760405162461bcd60e51b815260206004820152601960248201527f4e6f7420656e6f7567682073616e6420666f7220636c61696d00000000000000604482015260640161024b565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190610961565b905080156105d8576040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561056957600080fd5b505af115801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610961565b5060405182815233907f284dd43ee37b5c5d080af9db118c4e911fbdd88200fa4523b98330dcf2d024d09060200160405180910390a25b5050565b6000546001600160a01b031633146106365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240161019e565b6000546001600160a01b0316331461075a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024b565b600081116107d05760405162461bcd60e51b815260206004820152602760248201527f457874656e73696f6e2074696d652073686f756c64206265206772656174657260448201527f207468616e203000000000000000000000000000000000000000000000000000606482015260840161024b565b80600160008282546107e291906109b1565b909155505050565b6000546001600160a01b031633146108445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024b565b6001600160a01b0381166108c05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161024b565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600060208284031215610944578081fd5b81356001600160a01b038116811461095a578182fd5b9392505050565b600060208284031215610972578081fd5b8151801515811461095a578182fd5b600060208284031215610992578081fd5b5035919050565b6000602082840312156109aa578081fd5b5051919050565b600082198211156109e9577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea26469706673582212201c1a2573ae393d58dd0c607460af2a9561a812081f811b33f30770b08889bbeb64736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "claim(uint256)": {
        "params": {
          "amount": "the amount of tokens to be swapped"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256)": {
        "notice": "Swaps fake sand with the new polygonSand"
      },
      "claimedSand()": {
        "notice": "Getter for amount of fake Sand swapped"
      },
      "extendClaimPeriod(uint256)": {
        "notice": "Update end of claim period"
      },
      "unclaimedSand()": {
        "notice": "Getter for amount of sand which is still locked in this contract"
      },
      "withdrawUnclaimed()": {
        "notice": "We don't want minted sand to be locked here forever in case user does not claim it. So the owner can withdraw the remaining sand after a time period of two years."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/solc_0.8/polygon/child/sand/PolygonSandClaim.sol:PolygonSandClaim",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 23503,
        "contract": "src/solc_0.8/polygon/child/sand/PolygonSandClaim.sol:PolygonSandClaim",
        "label": "endOfClaimPeriod",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}